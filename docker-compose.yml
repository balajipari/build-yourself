version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: build_yourself_db_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "${DB_PORT}:5432"
    networks:
      - build_yourself_network_dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for development
  redis:
    image: redis:7-alpine
    container_name: build_yourself_redis_dev
    restart: unless-stopped
    volumes:
      - redis_data_dev:/data
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - build_yourself_network_dev
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Migration Service
  migrations:
    build:
      context: ./backend
      dockerfile: migration.dockerfile
    container_name: build_yourself_migrations_dev
    restart: "no"
    environment:
      - PGPASSWORD=${DB_PASSWORD}
      - PGHOST=postgres
      - PGPORT=5432
      - PGUSER=${DB_USER}
      - PGDATABASE=${DB_NAME}
    volumes:
      - ./backend/app/migrations:/migrations:ro
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - build_yourself_network_dev
    command: ["python", "run_migrations.py"]

  # Backend API (Development)
  backend:
    build:
      context: ./backend
      dockerfile: dockerfile
    container_name: build_yourself_api
    restart: unless-stopped
    env_file:
      - .env
    environment:
      # Override any specific variables if needed
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend:/app
      - /app/__pycache__
      - /app/.pytest_cache
      - backend_logs_dev:/app/logs
    ports:
      - "${API_PORT}:5000"
    depends_on:
      migrations:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    networks:
      - build_yourself_network_dev
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "5000", "--reload"]

volumes:
  postgres_data_dev:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/dev/postgres
  redis_data_dev:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/dev/redis
  backend_logs_dev:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/dev/logs

networks:
  build_yourself_network_dev:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
