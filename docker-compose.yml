version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: build_yourself_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: build_yourself
      POSTGRES_USER: builduser
      POSTGRES_PASSWORD: buildpass123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - build_yourself_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U builduser -d build_yourself"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and sessions (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: build_yourself_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - build_yourself_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: build_yourself_api
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://builduser:buildpass123@postgres:5432/build_yourself
      - REDIS_URL=redis://redis:6379
      - HOST=0.0.0.0
      - PORT=5000
      - DEBUG=False
      - ENVIRONMENT=production
    volumes:
      - ./backend:/app
      - /app/__pycache__
      - /app/.pytest_cache
      - backend_logs:/app/logs
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - build_yourself_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: build_yourself_nginx
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - build_yourself_network

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/postgres
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/redis
  backend_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/logs

networks:
  build_yourself_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
